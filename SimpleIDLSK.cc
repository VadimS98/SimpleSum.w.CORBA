// This file is generated by omniidl (C++ backend) - omniORB_4_3. Do not edit.

#include "SimpleIDL.hh"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

OMNI_MAYBE_UNUSED static const char* _0RL_library_version = omniORB_4_3;



MyInterface_ptr MyInterface_Helper::_nil() {
  return ::MyInterface::_nil();
}

::CORBA::Boolean MyInterface_Helper::is_nil(::MyInterface_ptr p) {
  return ::CORBA::is_nil(p);

}

void MyInterface_Helper::release(::MyInterface_ptr p) {
  ::CORBA::release(p);
}

void MyInterface_Helper::marshalObjRef(::MyInterface_ptr obj, cdrStream& s) {
  ::MyInterface::_marshalObjRef(obj, s);
}

MyInterface_ptr MyInterface_Helper::unmarshalObjRef(cdrStream& s) {
  return ::MyInterface::_unmarshalObjRef(s);
}

void MyInterface_Helper::duplicate(::MyInterface_ptr obj) {
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
}

MyInterface_ptr
MyInterface::_duplicate(::MyInterface_ptr obj)
{
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
  return obj;
}

MyInterface_ptr
MyInterface::_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


MyInterface_ptr
MyInterface::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

MyInterface_ptr
MyInterface::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_MyInterface _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_MyInterface* _the_nil_ptr = 0;
  if (!_the_nil_ptr) {
    omni::nilRefLock().lock();
    if (!_the_nil_ptr) {
      _the_nil_ptr = new _objref_MyInterface;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* MyInterface::_PD_repoId = "IDL:MyInterface:1.0";


_objref_MyInterface::~_objref_MyInterface() {
  
}


_objref_MyInterface::_objref_MyInterface(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::MyInterface::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
_objref_MyInterface::_ptrToObjRef(const char* id)
{
  if (id == ::MyInterface::_PD_repoId)
    return (::MyInterface_ptr) this;
  
  if (id == ::CORBA::Object::_PD_repoId)
    return (::CORBA::Object_ptr) this;

  if (omni::strMatch(id, ::MyInterface::_PD_repoId))
    return (::MyInterface_ptr) this;
  
  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (::CORBA::Object_ptr) this;

  return 0;
}


//
// Code for MyInterface::Summa

// Proxy call descriptor class. Mangled signature:
//  _clong_i_cLongArray
class _0RL_cd_6dce235c15f25e89_00000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_6dce235c15f25e89_00000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  LongArray_var arg_0_;
  const LongArray* arg_0;
  ::CORBA::Long result;
};

void _0RL_cd_6dce235c15f25e89_00000000::marshalArguments(cdrStream& _n)
{
  (const LongArray&) *arg_0 >>= _n;

}

void _0RL_cd_6dce235c15f25e89_00000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = new LongArray;
  (LongArray&)arg_0_ <<= _n;
  arg_0 = &arg_0_.in();

}

void _0RL_cd_6dce235c15f25e89_00000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;

}

void _0RL_cd_6dce235c15f25e89_00000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Long&)result <<= _n;

}

const char* const _0RL_cd_6dce235c15f25e89_00000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_6dce235c15f25e89_10000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_6dce235c15f25e89_00000000* tcd = (_0RL_cd_6dce235c15f25e89_00000000*)cd;
  _impl_MyInterface* impl = (_impl_MyInterface*) svnt->_ptrToInterface(MyInterface::_PD_repoId);
  tcd->result = impl->Summa(*tcd->arg_0);


}

::CORBA::Long _objref_MyInterface::Summa(const ::LongArray& numbers)
{
  _0RL_cd_6dce235c15f25e89_00000000 _call_desc(_0RL_lcfn_6dce235c15f25e89_10000000, "Summa", 6);
  _call_desc.arg_0 = &(::LongArray&) numbers;

  _invoke(_call_desc);
  return _call_desc.result;


}

_pof_MyInterface::~_pof_MyInterface() {}


omniObjRef*
_pof_MyInterface::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::_objref_MyInterface(ior, id);
}


::CORBA::Boolean
_pof_MyInterface::is_a(const char* id) const
{
  if (omni::ptrStrMatch(id, ::MyInterface::_PD_repoId))
    return 1;
  
  return 0;
}

const _pof_MyInterface _the_pof_MyInterface;

_impl_MyInterface::~_impl_MyInterface() {}


::CORBA::Boolean
_impl_MyInterface::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if (omni::strMatch(op, "Summa")) {

    _0RL_cd_6dce235c15f25e89_00000000 _call_desc(_0RL_lcfn_6dce235c15f25e89_10000000, "Summa", 6, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
_impl_MyInterface::_ptrToInterface(const char* id)
{
  if (id == ::MyInterface::_PD_repoId)
    return (::_impl_MyInterface*) this;
  
  if (id == ::CORBA::Object::_PD_repoId)
    return (void*) 1;

  if (omni::strMatch(id, ::MyInterface::_PD_repoId))
    return (::_impl_MyInterface*) this;
  
  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (void*) 1;
  return 0;
}

const char*
_impl_MyInterface::_mostDerivedRepoId()
{
  return ::MyInterface::_PD_repoId;
}

POA_MyInterface::~POA_MyInterface() {}

